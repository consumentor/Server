#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// data objects suffixed with GWO 
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion


namespace Consumentor.ShopGun.Gateway.Gepir
{
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wscf", "0.7.6319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="routerSoap", Namespace="http://www.gepir.org/")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ProductSearchWebServiceGateway : Consumentor.ShopGun.Gateway.WebServiceBase, IProductSearchWebServiceGateway
    {
        
        private gepirRequestHeaderGWO gepirRequestHeaderValue;
        
        private gepirResponseHeaderGWO gepirResponseHeaderValue;
        
        private System.Threading.SendOrPostCallback GetPartyByGLNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOwnerOfGLNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartyByGTINOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartyBySSCCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartyByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemByGTINOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback gepir00OperationCompleted;
        
        /// <remarks/>
        public ProductSearchWebServiceGateway()
        {
            
        }
        
        [System.Xml.Serialization.XmlElementAttribute(ElementName="gepirRequestHeaderValue")]
        public gepirRequestHeaderGWO GepirRequestHeaderValue
        {
            get
            {
                return this.gepirRequestHeaderValue;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("GepirRequestHeaderValue");
                }
                if ((this.gepirRequestHeaderValue != value))
                {
                    this.gepirRequestHeaderValue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(ElementName="gepirResponseHeaderValue")]
        public gepirResponseHeaderGWO GepirResponseHeaderValue
        {
            get
            {
                return this.gepirResponseHeaderValue;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("GepirResponseHeaderValue");
                }
                if ((this.gepirResponseHeaderValue != value))
                {
                    this.gepirResponseHeaderValue = value;
                }
            }
        }
        
        /// <remarks/>
        public event GetPartyByGLNCompletedEventHandler GetPartyByGLNCompleted;
        
        /// <remarks/>
        public event GetOwnerOfGLNCompletedEventHandler GetOwnerOfGLNCompleted;
        
        /// <remarks/>
        public event GetPartyByGTINCompletedEventHandler GetPartyByGTINCompleted;
        
        /// <remarks/>
        public event GetPartyBySSCCCompletedEventHandler GetPartyBySSCCCompleted;
        
        /// <remarks/>
        public event GetPartyByNameCompletedEventHandler GetPartyByNameCompleted;
        
        /// <remarks/>
        public event GetItemByGTINCompletedEventHandler GetItemByGTINCompleted;
        
        /// <remarks/>
        public event GetStatisticsCompletedEventHandler GetStatisticsCompleted;
        
        /// <remarks/>
        public event gepir00CompletedEventHandler gepir00Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirRequestHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirResponseHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gepir.org/GetPartyByGLN", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("gepirParty", Namespace="http://www.gepir.org/")]
        public gepirPartyGWO GetPartyByGLN([System.Xml.Serialization.XmlElementAttribute("GetPartyByGLN", Namespace="http://www.gepir.org/")] GetPartyByGLNGWO getPartyByGLN1)
        {
            object[] results = this.Invoke("GetPartyByGLN", new object[] {
                        getPartyByGLN1});
            return ((gepirPartyGWO)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartyByGLNAsync(GetPartyByGLNGWO getPartyByGLN1)
        {
            this.GetPartyByGLNAsync(getPartyByGLN1, null);
        }
        
        /// <remarks/>
        public void GetPartyByGLNAsync(GetPartyByGLNGWO getPartyByGLN1, object userState)
        {
            if ((this.GetPartyByGLNOperationCompleted == null))
            {
                this.GetPartyByGLNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartyByGLNOperationCompleted);
            }
            this.InvokeAsync("GetPartyByGLN", new object[] {
                        getPartyByGLN1}, this.GetPartyByGLNOperationCompleted, userState);
        }
        
        private void OnGetPartyByGLNOperationCompleted(object arg)
        {
            if ((this.GetPartyByGLNCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartyByGLNCompleted(this, new GetPartyByGLNCompletedEventArgsGWO(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirRequestHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirResponseHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gepir.org/GetOwnerOfGLN", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("gepirParty", Namespace="http://www.gepir.org/")]
        public gepirPartyGWO GetOwnerOfGLN([System.Xml.Serialization.XmlElementAttribute("GetOwnerOfGLN", Namespace="http://www.gepir.org/")] GetOwnerOfGLNGWO getOwnerOfGLN1)
        {
            object[] results = this.Invoke("GetOwnerOfGLN", new object[] {
                        getOwnerOfGLN1});
            return ((gepirPartyGWO)(results[0]));
        }
        
        /// <remarks/>
        public void GetOwnerOfGLNAsync(GetOwnerOfGLNGWO getOwnerOfGLN1)
        {
            this.GetOwnerOfGLNAsync(getOwnerOfGLN1, null);
        }
        
        /// <remarks/>
        public void GetOwnerOfGLNAsync(GetOwnerOfGLNGWO getOwnerOfGLN1, object userState)
        {
            if ((this.GetOwnerOfGLNOperationCompleted == null))
            {
                this.GetOwnerOfGLNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOwnerOfGLNOperationCompleted);
            }
            this.InvokeAsync("GetOwnerOfGLN", new object[] {
                        getOwnerOfGLN1}, this.GetOwnerOfGLNOperationCompleted, userState);
        }
        
        private void OnGetOwnerOfGLNOperationCompleted(object arg)
        {
            if ((this.GetOwnerOfGLNCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOwnerOfGLNCompleted(this, new GetOwnerOfGLNCompletedEventArgsGWO(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirRequestHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirResponseHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gepir.org/GetPartyByGTIN", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("gepirParty", Namespace="http://www.gepir.org/")]
        public gepirPartyGWO GetPartyByGTIN([System.Xml.Serialization.XmlElementAttribute("GetPartyByGTIN", Namespace="http://www.gepir.org/")] GetPartyByGTINGWO getPartyByGTIN1)
        {
            object[] results = this.Invoke("GetPartyByGTIN", new object[] {
                        getPartyByGTIN1});
            return ((gepirPartyGWO)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartyByGTINAsync(GetPartyByGTINGWO getPartyByGTIN1)
        {
            this.GetPartyByGTINAsync(getPartyByGTIN1, null);
        }
        
        /// <remarks/>
        public void GetPartyByGTINAsync(GetPartyByGTINGWO getPartyByGTIN1, object userState)
        {
            if ((this.GetPartyByGTINOperationCompleted == null))
            {
                this.GetPartyByGTINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartyByGTINOperationCompleted);
            }
            this.InvokeAsync("GetPartyByGTIN", new object[] {
                        getPartyByGTIN1}, this.GetPartyByGTINOperationCompleted, userState);
        }
        
        private void OnGetPartyByGTINOperationCompleted(object arg)
        {
            if ((this.GetPartyByGTINCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartyByGTINCompleted(this, new GetPartyByGTINCompletedEventArgsGWO(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirRequestHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirResponseHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gepir.org/GetPartyBySSCC", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("gepirParty", Namespace="http://www.gepir.org/")]
        public gepirPartyGWO GetPartyBySSCC([System.Xml.Serialization.XmlElementAttribute("GetPartyBySSCC", Namespace="http://www.gepir.org/")] GetPartyBySSCCGWO getPartyBySSCC1)
        {
            object[] results = this.Invoke("GetPartyBySSCC", new object[] {
                        getPartyBySSCC1});
            return ((gepirPartyGWO)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartyBySSCCAsync(GetPartyBySSCCGWO getPartyBySSCC1)
        {
            this.GetPartyBySSCCAsync(getPartyBySSCC1, null);
        }
        
        /// <remarks/>
        public void GetPartyBySSCCAsync(GetPartyBySSCCGWO getPartyBySSCC1, object userState)
        {
            if ((this.GetPartyBySSCCOperationCompleted == null))
            {
                this.GetPartyBySSCCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartyBySSCCOperationCompleted);
            }
            this.InvokeAsync("GetPartyBySSCC", new object[] {
                        getPartyBySSCC1}, this.GetPartyBySSCCOperationCompleted, userState);
        }
        
        private void OnGetPartyBySSCCOperationCompleted(object arg)
        {
            if ((this.GetPartyBySSCCCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartyBySSCCCompleted(this, new GetPartyBySSCCCompletedEventArgsGWO(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirRequestHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirResponseHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gepir.org/GetPartyByName", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("gepirParty", Namespace="http://www.gepir.org/")]
        public gepirPartyGWO GetPartyByName([System.Xml.Serialization.XmlElementAttribute("GetPartyByName", Namespace="http://www.gepir.org/")] GetPartyByNameGWO getPartyByName1)
        {
            object[] results = this.Invoke("GetPartyByName", new object[] {
                        getPartyByName1});
            return ((gepirPartyGWO)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartyByNameAsync(GetPartyByNameGWO getPartyByName1)
        {
            this.GetPartyByNameAsync(getPartyByName1, null);
        }
        
        /// <remarks/>
        public void GetPartyByNameAsync(GetPartyByNameGWO getPartyByName1, object userState)
        {
            if ((this.GetPartyByNameOperationCompleted == null))
            {
                this.GetPartyByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartyByNameOperationCompleted);
            }
            this.InvokeAsync("GetPartyByName", new object[] {
                        getPartyByName1}, this.GetPartyByNameOperationCompleted, userState);
        }
        
        private void OnGetPartyByNameOperationCompleted(object arg)
        {
            if ((this.GetPartyByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartyByNameCompleted(this, new GetPartyByNameCompletedEventArgsGWO(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirRequestHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirResponseHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gepir.org/GetItemByGTIN", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("gepirItem", Namespace="http://www.gepir.org/")]
        public gepirItemGWO GetItemByGTIN([System.Xml.Serialization.XmlElementAttribute("GetItemByGTIN", Namespace="http://www.gepir.org/")] GetItemByGTINGWO getItemByGTIN1)
        {
            object[] results = this.Invoke("GetItemByGTIN", new object[] {
                        getItemByGTIN1});
            return ((gepirItemGWO)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemByGTINAsync(GetItemByGTINGWO getItemByGTIN1)
        {
            this.GetItemByGTINAsync(getItemByGTIN1, null);
        }
        
        /// <remarks/>
        public void GetItemByGTINAsync(GetItemByGTINGWO getItemByGTIN1, object userState)
        {
            if ((this.GetItemByGTINOperationCompleted == null))
            {
                this.GetItemByGTINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemByGTINOperationCompleted);
            }
            this.InvokeAsync("GetItemByGTIN", new object[] {
                        getItemByGTIN1}, this.GetItemByGTINOperationCompleted, userState);
        }
        
        private void OnGetItemByGTINOperationCompleted(object arg)
        {
            if ((this.GetItemByGTINCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemByGTINCompleted(this, new GetItemByGTINCompletedEventArgsGWO(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirRequestHeaderValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("gepirResponseHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gepir.org/GetStatistics", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("gepirStatistics", Namespace="http://www.gepir.org/")]
        public gepirStatisticsGWO GetStatistics([System.Xml.Serialization.XmlElementAttribute("GetStatistics", Namespace="http://www.gepir.org/")] GetStatisticsGWO getStatistics1)
        {
            object[] results = this.Invoke("GetStatistics", new object[] {
                        getStatistics1});
            return ((gepirStatisticsGWO)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisticsAsync(GetStatisticsGWO getStatistics1)
        {
            this.GetStatisticsAsync(getStatistics1, null);
        }
        
        /// <remarks/>
        public void GetStatisticsAsync(GetStatisticsGWO getStatistics1, object userState)
        {
            if ((this.GetStatisticsOperationCompleted == null))
            {
                this.GetStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetStatistics", new object[] {
                        getStatistics1}, this.GetStatisticsOperationCompleted, userState);
        }
        
        private void OnGetStatisticsOperationCompleted(object arg)
        {
            if ((this.GetStatisticsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticsCompleted(this, new GetStatisticsCompletedEventArgsGWO(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gepir.org/gepir00", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.gepir.org/gepir01")]
        public System.Xml.XmlNode gepir00()
        {
            object[] results = this.Invoke("gepir00", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void gepir00Async()
        {
            this.gepir00Async(null);
        }
        
        /// <remarks/>
        public void gepir00Async(object userState)
        {
            if ((this.gepir00OperationCompleted == null))
            {
                this.gepir00OperationCompleted = new System.Threading.SendOrPostCallback(this.Ongepir00OperationCompleted);
            }
            this.InvokeAsync("gepir00", new object[0], this.gepir00OperationCompleted, userState);
        }
        
        private void Ongepir00OperationCompleted(object arg)
        {
            if ((this.gepir00Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.gepir00Completed(this, new gepir00CompletedEventArgsGWO(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }
}
