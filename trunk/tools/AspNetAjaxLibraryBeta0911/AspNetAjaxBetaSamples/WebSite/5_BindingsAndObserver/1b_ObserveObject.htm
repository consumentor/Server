<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--
This sample demonstrates how you can use Sys.Observer to make a DOM element, 
JavaScript array, or in this example, a JavaScript object, 'observable', 
by adding methods to the object. 

The added 'instance' methods allow you to 
make 'observable' changes, or add propertyChanged event handlers. 

In the case of a JavaScript arrays you can also add collectionChanged event handlers.
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>  
    <title>Observer</title>
    <link href="../styles/images.css" rel="stylesheet" type="text/css"/>

    <script src="../Scripts/MicrosoftAjax/MicrosoftAjax.debug.js" type="text/javascript"></script>
    <script src="../Scripts/MicrosoftAjax/MicrosoftAjaxTemplates.debug.js" type="text/javascript"></script>

    <script type="text/javascript">
        var image = { Name: "Question mark", Uri: "../images/question.jpg" },
        imageElement, statusElement;

        // Make the object observable. This will add instance methods to the object
        Sys.Observer.makeObservable(image);

        // Use an instance method to add a Property Changed event handler to the object
        image.add_propertyChanged(function(source, args) {
            statusElement.innerHTML += args.get_propertyName() + ": " + source[args.get_propertyName()] + "<br/>";
            imageElement.src = image.Uri;
        });

        Sys.onReady(function() {
            $addHandler("#setImage1", "click", function() {
                statusElement.innerHTML = "";
                // Use an instance method to make an 'observable change
                image.setValue("Name", "Tiger");
                image.setValue("Uri", "../images/p190.jpg");
            });

            $addHandler("#setImage2", "click", function() {
                statusElement.innerHTML = "";
                // Use an instance method to make an 'observable change
                image.setValue("Name", "Birds");
                image.setValue("Uri", "../images/p52.jpg");
            });

            imageElement = Sys.get("#imageEl");
            statusElement = Sys.get("#statusEl");
            imageElement.src = image.Uri;
        });
   </script>
</head>

<body>

    <input id="setImage1" type="button" value="Set Image One"/>  
    <input id="setImage2" type="button" value="Set Image Two"/>  

    <div class="imageitem">
        <img id="imageEl"/>
    </div>

    <div id="statusEl"></div>
</body>
</html>
